@misc{1Lab:2022,
  url    = {https://1lab.dev},
  author = {The 1Lab Development Team},
  title  = {The 1Lab: A formalised, explorable online resource for Homotopy Type Theory.},
  year   = {2022},
  label  = {1Lab}
}

@article{ABCFHL:2021,
  title     = {Syntax and models of Cartesian cubical type theory},
  volume    = {31},
  doi       = {10.1017/S0960129521000347},
  number    = {4},
  journal   = {Mathematical Structures in Computer Science},
  publisher = {Cambridge University Press},
  author    = {Angiuli, Carlo and Brunerie, Guillaume and Coquand, Thierry and Harper, Robert and Hou (Favonia), Kuen-Bang and Licata, Daniel R.},
  year      = {2021},
  pages     = {424–468},
  label     = {ABCFHL}
}

@misc{AFH:2017,
  doi       = {10.48550/ARXIV.1712.01800},
  url       = {https://arxiv.org/abs/1712.01800},
  author    = {Angiuli, Carlo and Hou (Favonia), Kuen-Bang and Harper, Robert},
  keywords  = {Logic in Computer Science (cs.LO), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title     = {Computational Higher Type Theory III: Univalent Universes and Exact Equality},
  publisher = {arXiv},
  year      = {2017},
  copyright = {arXiv.org perpetual, non-exclusive license},
  label     = {AFH}
}

@article{Vezzosi:2019,
  author     = {Vezzosi, Andrea and M\"{o}rtberg, Anders and Abel, Andreas},
  title      = {Cubical Agda: A Dependently Typed Programming Language with Univalence and Higher Inductive Types},
  year       = {2019},
  issue_date = {August 2019},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {3},
  number     = {ICFP},
  url        = {https://doi.org/10.1145/3341691},
  doi        = {10.1145/3341691},
  abstract   = {Proof assistants based on dependent type theory provide expressive languages for both programming and proving within the same system. However, all of the major implementations lack powerful extensionality principles for reasoning about equality, such as function and propositional extensionality. These principles are typically added axiomatically which disrupts the constructive properties of these systems. Cubical type theory provides a solution by giving computational meaning to Homotopy Type Theory and Univalent Foundations, in particular to the univalence axiom and higher inductive types. This paper describes an extension of the dependently typed functional programming language Agda with cubical primitives, making it into a full-blown proof assistant with native support for univalence and a general schema of higher inductive types. These new primitives make function and propositional extensionality as well as quotient types directly definable with computational content. Additionally, thanks also to copatterns, bisimilarity is equivalent to equality for coinductive types. This extends Agda with support for a wide range of extensionality principles, without sacrificing type checking and constructivity.},
  journal    = {Proc. ACM Program. Lang.},
  month      = {jul},
  articleno  = {87},
  numpages   = {29},
  keywords   = {Higher Inductive Types, Univalence, Dependent Pattern Matching, Cubical Type Theory}
}

@inproceedings{Bezem:2014,
  author    = {Marc Bezem and Thierry Coquand and Simon Huber},
  title     = {{A Model of Type Theory in Cubical Sets}},
  booktitle = {19th International Conference on Types for Proofs and Programs (TYPES 2013)},
  pages     = {107--128},
  series    = {Leibniz International Proceedings in Informatics (LIPIcs)},
  isbn      = {978-3-939897-72-9},
  issn      = {1868-8969},
  year      = {2014},
  volume    = {26},
  editor    = {Ralph Matthes and Aleksy Schubert},
  publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address   = {Dagstuhl, Germany},
  url       = {http://drops.dagstuhl.de/opus/volltexte/2014/4628},
  urn       = {urn:nbn:de:0030-drops-46284},
  doi       = {10.4230/LIPIcs.TYPES.2013.107},
  annote    = {Keywords: Models of dependent type theory, cubical sets, Univalent Foundations}
}

@misc{CCHM:2016,
  doi       = {10.48550/ARXIV.1611.02108},
  url       = {https://arxiv.org/abs/1611.02108},
  author    = {Cohen, Cyril and Coquand, Thierry and Huber, Simon and Mörtberg, Anders},
  keywords  = {Logic in Computer Science (cs.LO), Logic (math.LO), FOS: Computer and information sciences, FOS: Computer and information sciences, FOS: Mathematics, FOS: Mathematics, F.3.2; F.4.1},
  title     = {Cubical Type Theory: a constructive interpretation of the univalence axiom},
  publisher = {arXiv},
  year      = {2016},
  copyright = {arXiv.org perpetual, non-exclusive license},
  label     = {CCHM}
}

@article{Orton:2017,
  author     = {Ian Orton and Andrew M. Pitts},
  title      = {Axioms for Modelling Cubical Type Theory in a Topos},
  journal    = {CoRR},
  volume     = {abs/1712.04864},
  year       = {2017},
  url        = {http://arxiv.org/abs/1712.04864},
  eprinttype = {arXiv},
  eprint     = {1712.04864},
  timestamp  = {Mon, 13 Aug 2018 16:46:38 +0200},
  biburl     = {https://dblp.org/rec/journals/corr/abs-1712-04864.bib},
  bibsource  = {dblp computer science bibliography, https://dblp.org}
}

@book{Rijke:2022,
  author = {Egbert Rijke},
  title  = {Introduction to Homotopy Type Theory},
  year   = 2022
}

@book{UF:2013,
  author    = {The {Univalent Foundations Program}},
  title     = {Homotopy Type Theory: Univalent Foundations of Mathematics},
  publisher = {\url{https://homotopytypetheory.org/book}},
  address   = {Institute for Advanced Study},
  year      = 2013
}
